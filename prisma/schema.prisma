generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  username     String  @unique
  email        String  @unique
  password     String
  refreshToken String?
  posts        Post[]  @relation("UserPosts")
}

model Post {
  id            String         @id @default(uuid())
  title         String
  subtitle      String
  content       String
  videoUrl      String
  published     Boolean        @default(false)
  authorId      String
  postTypeId    Int?
  publishedDate DateTime
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  order         Int?
  author        User           @relation("UserPosts", fields: [authorId], references: [id], onDelete: Cascade)
  postType      PostType?      @relation(fields: [postTypeId], references: [id], onDelete: Restrict)
  categories    PostCategory[]

  @@map("post")
}

model Category {
  id          Int            @id @default(autoincrement())
  name        String         @unique
  description String
  posts       PostCategory[]

  @@map("categories")
}

model PostType {
  id          Int     @id @default(autoincrement())
  name        String
  order       Int     @unique
  description String?
  post        Post[]

  @@map("post_types")
}

model PostCategory {
  postId     String   @map("post_id")
  categoryId Int      @map("category_id")
  isMain     Boolean  @default(false)
  order      Int      @default(0)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([postId, categoryId])
  @@map("post_category")
}
